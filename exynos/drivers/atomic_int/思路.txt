欢迎大家观看迅为驱动视频教程。
前面的视频教程介绍了并发与竞态的概念。
本节介绍其中一种解决竞态的方法--整型原子操作。
大家要牢记这句话：解决竞态的途径是“保证对共享资源的互斥访问”

1.直接列出内核中提供的宏定义
变量：atomic_t 整型变量
宏定义：atomic_read
	(*(volatile int *)&(v)->counter)
	volatile关键词。表示变量每次被访问，执行单元会从内存单元中取值
	不带关键词。表示变量在编译的时候可能被"优化"。
	保证对特殊地址的稳定访问！
宏定义：atomic_inc		atomic_add(1, (v)) 变量加1
宏定义：atomic_dec	变量减1
宏定义：ATOMIC_INIT	赋值

2.如何使用
	假设任务单元A申请“共享单元”：
	则先读变量，如果0，则对变量加1，如果1，则直接返回
	然后对共享资源资源进行操作，操作完毕之后则对变量赋值
	假设任务单元B要申请“共享单元”：
	则先读变量，如果0，则对变量加1，如果1，则直接返回
	然后对共享资源资源进行操作，操作完毕之后则对变量赋值

3.代码分析
	open_atomic_int_one以及open_atomic_int_two两个程序
	要对/dev/atomic_int设备节点镜像操作
	先运行的程序1，将变量赋值为1，释放的时候赋值为0
	如果程序1在没有释放的情况下，程序2调用设备节点则会直接返回，无法调用。


	
	
	
	
	
	
	
	
	
	