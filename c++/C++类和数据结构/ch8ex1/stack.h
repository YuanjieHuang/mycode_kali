// stack.h - the array implementation of a stack// note:  the constructor, the (default) copy constructor, the (default) assignment operator,// and push function can cause an exception to be thrown if heap memory is exhausted#include "Array.h"template <class DataType>class Stack{public:	Stack( );	void push( DataType elementToPush );  	// removes an element from the top of the stack and returns it in poppedElement; 	// returns false if called on an empty stack; otherwise, returns true		bool pop( DataType & poppedElement );	// returns the element at the top of the stack in topElement without removing it	// returns false is called on an empty stack; otherwise, returns true	bool peek( DataType & topElement ); 	bool isEmpty( ) const;  // returns true if the stack is empty;				// otherwise, returns false	void makeEmpty( );private:	Array<DataType> elements;	int top;};#include "stack.cpp"