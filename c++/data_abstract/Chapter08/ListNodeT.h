// *********************************************************// Header file ListNodeT.h for the ADT list.// Pointer-based implementation -- TEMPLATE VERSION// *********************************************************#include <cstddef>template <class T> class List;template <class T> class ListNode{private:   ListNode(): next(NULL) {};   ListNode(const T & nodeItem, ListNode *ptr)            : item(nodeItem), next(ptr) {};               T        item;          // a data item on the list   ListNode *next;         // pointer to next node   // friend class - can access private parts   friend class List <T>;};  // end class