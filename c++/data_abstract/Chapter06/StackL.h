// *********************************************************// Header file StackL.h for the ADT stack.// ADT list implementation.// *********************************************************#include "StackException.h"#include "ListP.h"     // list operationstypedef ListItemType StackItemType;class Stack{public:// constructors and destructor:   Stack();                     // default constructor   Stack(const Stack& aStack);  // copy constructor   ~Stack();                    // destructor// Stack operations:   bool isEmpty() const;   void push(StackItemType newItem) throw(StackException);   void pop() throw(StackException);   void pop(StackItemType& stackTop) throw(StackException);   void getTop(StackItemType& stackTop) const throw(StackException);private:   List aList;  // list of stack items};  // end class// End of header file.